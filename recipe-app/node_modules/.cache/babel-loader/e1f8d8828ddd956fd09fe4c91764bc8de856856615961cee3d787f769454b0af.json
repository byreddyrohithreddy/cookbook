{"ast":null,"code":"// src/components/RecipeList.js\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function RecipeList(){const[recipes,setRecipes]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{fetch('http://ec2-3-17-148-216.us-east-2.compute.amazonaws.com:8000/api/vegetarian/').then(response=>response.json()).then(data=>{setRecipes(data);setLoading(false);}).catch(error=>{console.error('Error fetching recipes:',error);setLoading(false);});},[]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Vegetarian Recipes\"}),/*#__PURE__*/_jsx(\"ul\",{children:recipes.map(recipe=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:recipe.name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Ingredients:\"}),\" \",recipe.ingredients]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Instructions:\"}),\" \",recipe.instructions]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cuisine:\"}),\" \",recipe.cuisine]})]},recipe.id))})]});}export default RecipeList;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","RecipeList","recipes","setRecipes","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","map","recipe","name","ingredients","instructions","cuisine","id"],"sources":["E:/roulette_assessment/recipe-app/src/components/RecipeList.js"],"sourcesContent":["// src/components/RecipeList.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction RecipeList() {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('http://ec2-3-17-148-216.us-east-2.compute.amazonaws.com:8000/api/vegetarian/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setRecipes(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching recipes:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Vegetarian Recipes</h2>\r\n      <ul>\r\n        {recipes.map(recipe => (\r\n          <li key={recipe.id}>\r\n            <h3>{recipe.name}</h3>\r\n            <p><strong>Ingredients:</strong> {recipe.ingredients}</p>\r\n            <p><strong>Instructions:</strong> {recipe.instructions}</p>\r\n            <p><strong>Cuisine:</strong> {recipe.cuisine}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACdU,KAAK,CAAC,8EAA8E,CAAC,CAClFC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZP,UAAU,CAACO,IAAI,CAAC,CAChBL,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,GAAID,OAAO,CAAE,mBAAON,IAAA,MAAAgB,QAAA,CAAG,YAAU,CAAG,CAAC,CAErC,mBACEd,KAAA,QAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BhB,IAAA,OAAAgB,QAAA,CACGZ,OAAO,CAACa,GAAG,CAACC,MAAM,eACjBhB,KAAA,OAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAKE,MAAM,CAACC,IAAI,CAAK,CAAC,cACtBjB,KAAA,MAAAc,QAAA,eAAGhB,IAAA,WAAAgB,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACE,MAAM,CAACE,WAAW,EAAI,CAAC,cACzDlB,KAAA,MAAAc,QAAA,eAAGhB,IAAA,WAAAgB,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACE,MAAM,CAACG,YAAY,EAAI,CAAC,cAC3DnB,KAAA,MAAAc,QAAA,eAAGhB,IAAA,WAAAgB,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACE,MAAM,CAACI,OAAO,EAAI,CAAC,GAJ1CJ,MAAM,CAACK,EAKZ,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAApB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}